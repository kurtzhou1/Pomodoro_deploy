{"version":3,"sources":["components/ToDoList.tsx","constant/index.ts","components/clock.tsx","components/hasDone.tsx","components/module.tsx","reducers/index.ts","index.js","components/styles/css.module.scss"],"names":["ToDoList","inputText","useSelector","state","input","text","toDoList","todos","radioValue","value","dispatch","useDispatch","className","onChange","e","target","type","payload","placeholder","onClick","length","addEvent","map","data","id","isDone","name","parseInt","styles","todo_list_cancel","removeId","PlusOutlined","Clock","useState","percentage","setPercentage","nowDoingItem","workTimeFormat","Date","workTime","toISOString","substr","remainWorkSecond","setRemainWorkSecond","breakTimeFormat","breakTime","remainBreakSecond","setremainBreakSecond","isWorkTime","useRef","storeWorkRemainTime","defaultWorkTime","storeBreakRemainTime","defaulBreakTime","timeIDRef","isTimeStart","setIsTimeStart","isTimePause","setIsTimePause","audioPlay","setAudioPlay","timeHandle","time","nowTime","now","window","setInterval","remainTime","pastTime","timeFormat","Math","round","current","removeEvent","passItem","clearInterval","circumference","radius","PI","useEffect","percentageCurrent","addItem","timerWrap","timerContainer","timeInfo","iconWrap","CaretRightOutlined","PauseOutlined","StepForwardOutlined","alert","svg","width","viewBox","timer","fill","strokeWidth","stroke","r","cx","cy","strokeDasharray","strokeDashoffset","strokeLinecap","url","playing","loop","HasDone","hasDoneItem","item","Containers","leftVisible","setLeftVisible","rightVisible","setRightVisible","PlusSquareOutlined","MenuFoldOutlined","initState","store","createStore","action","tmp_add_toDoList","todoLength","push","tmp_done_toDoList","finishEvent","remove_Finish_Todo","index","find","todo","splice","i","tmp_add_doneItem","APP","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f4c7cc58.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport {IState,todos} from '../libs/common';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {CHANGE_TEXT,ADD_TODOLIST,DONE_TODOLIST,REMOVE_TODOLIST,SELECT_RADIO_VALUE} from '../constant'\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport './styles/comon.scss'\r\nimport styles from './styles/css.module.scss';\r\n\r\nconst ToDoList:React.FC = () => {\r\n\r\n  const inputText = useSelector((state:IState) => state.input.text)\r\n  const toDoList = useSelector((state:IState) => state.todos)\r\n  const radioValue = useSelector((state:IState)=> state.value)\r\n  const dispatch = useDispatch()\r\n\r\n  const changeText = (value:string) =>{\r\n      dispatch({\r\n        type: CHANGE_TEXT,\r\n        payload: {input:value}\r\n      })\r\n  }\r\n\r\n  const addEvent = () => {\r\n      if(inputText.length > 0) {\r\n          dispatch({\r\n            type: ADD_TODOLIST,\r\n            payload: {addEvent:inputText}\r\n          })\r\n      }\r\n  }\r\n\r\n  const removeEvent = (value:number) =>{\r\n    dispatch({\r\n      type: REMOVE_TODOLIST,\r\n      payload: { removeId:value },\r\n    });\r\n  }\r\n\r\n  const selectRadioValue = (value:number) => {\r\n    dispatch({\r\n      type: SELECT_RADIO_VALUE,\r\n      payload: { radioValue:value }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"Pomodoro_module\">\r\n      <input value={inputText} onChange={e=>changeText(e.target.value)} placeholder='type something and add'/>\r\n      <div className='add' onClick={()=>addEvent()}>＋</div>\r\n      <div className='item_wrap'>\r\n        {toDoList.map((data:todos)=>{\r\n          const {id = 0,toDoList = '預設值' , isDone = false} = data;\r\n          return(\r\n          <div className='item'>\r\n              <div className={`id ${radioValue === id ? 'show':''}`}><input name='item' type='radio' value={id} onChange={e=>selectRadioValue(parseInt(e.target.value))}/><span>{id}</span></div>\r\n              <div className='toDoList'>{toDoList}</div>\r\n              <div className={styles.todo_list_cancel} onClick={()=>removeEvent(id)}>\r\n                <PlusOutlined />\r\n              </div>\r\n          </div>\r\n          )})\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoList;\r\n","export const CHANGE_TEXT = 'CHANGE_TEXT';\r\nexport const ADD_TODOLIST = 'ADD_TODOLIST';\r\nexport const DONE_TODOLIST = 'DONE_TODOLIST';\r\nexport const REMOVE_TODOLIST = 'REMOVE_TODOLIST';\r\nexport const TIME_START = 'TIME_START';\r\nexport const SELECT_RADIO_VALUE = 'SELECT_RADIO_VALUE';\r\nexport const HAS_DONE_ITEM = 'HAS_DONE_ITEM';","import React,{useState,useEffect,useRef} from 'react'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport {IState} from '../libs/common'\r\nimport {HAS_DONE_ITEM,REMOVE_TODOLIST} from '../constant'\r\nimport styles from './styles/css.module.scss'\r\nimport { PauseOutlined, CaretRightOutlined,StepForwardOutlined } from '@ant-design/icons';\r\nimport ReactPlayer from \"react-player\";\r\n\r\nconst Clock:React.FC<{isDone?:boolean}> = () => {\r\n    const defaultWorkTime = 25;\r\n    const defaulBreakTime = 5;\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [percentage, setPercentage] = useState<number>(100); // 圓的圓周\r\n    const nowDoingItem = useSelector((state:IState)=> state.todos[state.value] ? state.todos[state.value].toDoList : '')\r\n    \r\n    // 工作時間\r\n    const workTime = defaultWorkTime * 60\r\n    const workTimeFormat = new Date(workTime*1000).toISOString().substr(11,8)\r\n    const [remainWorkSecond, setRemainWorkSecond] = useState<string>(workTimeFormat)\r\n\r\n    // 休息時間\r\n    const breakTime = defaulBreakTime * 60\r\n    const breakTimeFormat = new Date(breakTime*1000).toISOString().substr(11,8)\r\n    const [remainBreakSecond, setremainBreakSecond] = useState<string>(breakTimeFormat)\r\n\r\n    // 顯示工作or休息時間Time\r\n    const isWorkTime  = useRef<boolean>(true) //判斷現在是工作還是休息\r\n\r\n    // 暫停時間\r\n    const storeWorkRemainTime = useRef(workTime) // 傳出工作剩餘時間\r\n    const storeBreakRemainTime = useRef(breakTime)\r\n    const timeIDRef =  useRef(0)// timeoutId 提供clear使用\r\n    const [isTimeStart,setIsTimeStart] = useState(false)\r\n    const [isTimePause,setIsTimePause] = useState(false)\r\n\r\n    // 鬧鐘\r\n    const [ audioPlay , setAudioPlay ] = useState(false)\r\n\r\n    const timeHandle = (time:number) => {\r\n        const nowTime = Date.now()\r\n        return window.setInterval(()=>{\r\n            let remainTime = 0\r\n            const pastTime = (Date.now() - nowTime) / 1000\r\n            remainTime = time - pastTime < 0 ? 0 : time - pastTime\r\n            const timeFormat = new Date(Math.round(remainTime)*1000).toISOString().substr(11,8)\r\n            isWorkTime.current ? setRemainWorkSecond(timeFormat) : setremainBreakSecond(timeFormat)\r\n            isWorkTime.current ? storeWorkRemainTime.current = remainTime : storeBreakRemainTime.current = remainTime\r\n            //處理圓圈動畫\r\n        },1000)  \r\n    }\r\n\r\n    const TimeStart = () => {\r\n        storeWorkRemainTime.current = workTime;\r\n        if(nowDoingItem !== ''){\r\n            timeIDRef.current = timeHandle(workTime)\r\n            setIsTimeStart(true)\r\n        }else{\r\n            alert('請點擊左下角輸入代辦事件')\r\n        }\r\n    }\r\n\r\n    const pauseTime = () => {\r\n        if(!isTimePause){\r\n            clearInterval(timeIDRef.current)\r\n            setIsTimePause(true)\r\n        }\r\n    }\r\n\r\n    const continueTime = () => {\r\n        if(isTimePause){\r\n            timeIDRef.current = timeHandle(storeWorkRemainTime.current)\r\n            setIsTimePause(false)\r\n        }\r\n    }\r\n\r\n    const addhasDoneItem = (value:string) => {\r\n        dispatch({\r\n            type: HAS_DONE_ITEM,\r\n            payload: {addItem:value}\r\n        })\r\n    }\r\n\r\n    const removeEvent = () =>{\r\n        dispatch({\r\n          type: REMOVE_TODOLIST,\r\n          payload: { removeId:0 },\r\n        });\r\n      }\r\n\r\n    const passItem = () => {\r\n        if(nowDoingItem !== '' && !isTimeStart){\r\n            removeEvent() //刪除項目\r\n        }\r\n        if(isTimeStart){\r\n            removeEvent() //刪除項目\r\n            setIsTimeStart(false)\r\n            clearInterval(timeIDRef.current)\r\n            setIsTimePause(false)\r\n            setRemainWorkSecond(workTimeFormat) //重置倒數時間\r\n        }\r\n    }\r\n\r\n    const skipBreak = () => {\r\n        setIsTimeStart(false)\r\n        clearInterval(timeIDRef.current)\r\n        removeEvent() //刪除已完成項目\r\n        isWorkTime.current = true // 改回工作時間\r\n        setIsTimePause(false) // 暫停時間改回true\r\n        setAudioPlay(false)\r\n        setRemainWorkSecond(workTimeFormat)\r\n    }\r\n\r\n\r\n// 關於圓 start\r\n\r\n    // 寬度 / 2  - 線的寬度 / 2\r\n    const radius = () => {\r\n        return 120 / 2 - 10 / 2;\r\n    };\r\n\r\n    // 圓的大小的一半，寬度 / 2，拼湊整個圓\r\n    const circleOffset = () => {\r\n        return '50%';\r\n    };\r\n\r\n    // 圓周率公式\r\n    const circumference = () => {\r\n        return radius() * 2 * Math.PI;\r\n    };\r\n\r\n    // 圓周見圓周乘上百分比除上 100，修改上面 90 參數 100 為滿圓\r\n    const progress = () => {\r\n    return circumference() - (circumference() * percentage) / 100;\r\n    };\r\n    \r\n// 關於圓 end\r\n\r\n    useEffect(()=>{\r\n        let percentageCurrent = Math.round(storeWorkRemainTime.current / 15)\r\n        setPercentage(percentageCurrent)\r\n        if(storeWorkRemainTime.current <= 0 && isWorkTime.current){\r\n            isWorkTime.current = false // 改成休息時間\r\n            clearInterval(timeIDRef.current) // 暫停\r\n            timeIDRef.current = timeHandle(breakTime) // 重啟休息時間\r\n            addhasDoneItem(nowDoingItem)\r\n            setAudioPlay(true)\r\n        }\r\n    },[storeWorkRemainTime.current])\r\n\r\n    useEffect(()=>{\r\n        let percentageCurrent = Math.round(storeWorkRemainTime.current / 15)\r\n        setPercentage(percentageCurrent)\r\n       if (storeBreakRemainTime.current <= 0 && !isWorkTime.current){\r\n            setIsTimeStart(false)\r\n            clearInterval(timeIDRef.current)\r\n            removeEvent() //刪除已完成項目\r\n            isWorkTime.current = true // 改回工作時間\r\n            setIsTimePause(false) // 暫停時間改回true\r\n            setAudioPlay(false)\r\n            setRemainWorkSecond(workTimeFormat)\r\n        }\r\n    },[storeBreakRemainTime.current])\r\n\r\n    return(\r\n        <div className={styles.timerWrap}>\r\n            <div  className={styles.timerContainer}>\r\n                <div className={styles.timeInfo}>\r\n                    <div>\r\n                        {!isWorkTime.current ? '✔ 已完成':'✘ 未完成'}\r\n                    </div>\r\n                    {isWorkTime.current ? \r\n                        <div>\r\n                            <div>{isTimePause ? '暫停中' : nowDoingItem}</div>\r\n                            <div>{remainWorkSecond}</div>\r\n                        </div>  :\r\n                        <div>\r\n                            <div>休息時間{remainBreakSecond}</div>\r\n                            <div className='skipBreak' onClick={skipBreak}>點我跳過</div>\r\n                        </div>\r\n                    }\r\n                    {isWorkTime.current ? isTimeStart  ?\r\n                        <div className={styles.iconWrap}>\r\n                            <div onClick={()=> {isTimePause ? continueTime() : pauseTime()}}>\r\n                                {isTimePause ? <CaretRightOutlined /> : <PauseOutlined />}\r\n                            </div>\r\n                            {isTimePause ?  \r\n                                <div onClick={passItem}>\r\n                                    <StepForwardOutlined />\r\n                                </div> : '' }\r\n                        </div> :\r\n                        <>\r\n                        <div className={styles.iconWrap}>\r\n                            <div onClick={()=> TimeStart()}>\r\n                                <CaretRightOutlined />\r\n                            </div>\r\n                            <div onClick={passItem}>\r\n                                <StepForwardOutlined />\r\n                            </div>\r\n                        </div>\r\n                        </> : ''\r\n                    }\r\n                </div>\r\n                <svg className={styles.svg} width=\"60%\" viewBox=\"0 0 200 200\">\r\n                    <circle\r\n                    className={styles.timer}\r\n                    fill=\"transparent\"\r\n                    strokeWidth=\"5\"\r\n                    stroke=\"#84fab0\"\r\n                    r=\"55\"\r\n                    cx={circleOffset()}\r\n                    cy={circleOffset()}\r\n                    />\r\n                    <circle\r\n                    className={styles.timer}\r\n                    fill=\"transparent\"\r\n                    strokeWidth=\"5\"\r\n                    stroke=\"#8fd3f4\"\r\n                    r=\"55\"\r\n                    cx={circleOffset()}\r\n                    cy={circleOffset()}\r\n                    strokeDasharray={circumference()}\r\n                    strokeDashoffset={progress()}\r\n                    strokeLinecap=\"round\"\r\n                    />\r\n                </svg>\r\n            </div>\r\n            <ReactPlayer\r\n                url=\"https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_700KB.mp3\"\r\n                playing={audioPlay}\r\n                loop={true}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clock\r\n\r\n\r\n// https://dotblogs.com.tw/wasichris/2019/12/11/111627","import React, { useState } from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {IState} from '../libs/common'\r\n\r\nconst HasDone:React.FC = () => {\r\n\r\n    const hasDoneItem = useSelector((state:IState)=>state.hasDoneItem)\r\n\r\n    return(\r\n        <div className='hasDone'>\r\n            <div className='title'>已完成工作事項</div>\r\n            <div className='hasDoneItem'>{hasDoneItem.map(item=><div>{item}</div>)}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HasDone","import React, { useState } from 'react';\r\nimport ToDoList from './ToDoList'\r\nimport Clock from './clock'\r\nimport './styles/comon.scss'\r\nimport { MenuFoldOutlined, PlusSquareOutlined } from '@ant-design/icons';\r\nimport HasDone from './hasDone';\r\n\r\nconst Containers:React.FC = () => {\r\n\r\n    const [leftVisible,setLeftVisible]= useState<boolean>(false)\r\n    const [rightVisible,setRightVisible]= useState<boolean>(false)\r\n\r\n    // const [percentage, setPercentage] = useState<number>(100); // 圓的圓周\r\n\r\n    return (\r\n        <div className='timer_module'>\r\n            <Clock />\r\n            <div className={`leftVisible ${leftVisible ? \"show\":\"\"}`}>\r\n                <ToDoList />\r\n            </div>\r\n            <div className={`rightVisible ${rightVisible ? 'show':''}`}>\r\n                <HasDone />\r\n            </div>\r\n            <div className='bottomIconWrap'>\r\n                <div onClick={()=>setLeftVisible(!leftVisible)}><PlusSquareOutlined /></div>\r\n                <div onClick={()=>setRightVisible(!rightVisible)}><MenuFoldOutlined /></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Containers\r\n","import {CHANGE_TEXT,ADD_TODOLIST,DONE_TODOLIST,REMOVE_TODOLIST,SELECT_RADIO_VALUE,HAS_DONE_ITEM} from '../constant'\r\nimport {IState, todos} from '../libs/common'\r\n\r\nexport const initState:IState = {\r\n    input:{\r\n        text:'',\r\n    },\r\n    todos:[{\r\n        id:0,\r\n        toDoList: '範文測試',\r\n        isDone: false,\r\n      }],\r\n    value: 0,\r\n    hasDoneItem: []\r\n}\r\n\r\nexport const reducer = (state=initState , action:any):IState =>{\r\n    switch(action.type){\r\n        case CHANGE_TEXT:\r\n            return {...state,input:{text:action.payload.input}}\r\n        case ADD_TODOLIST:\r\n            const tmp_add_toDoList = state.todos.map(item=>item)\r\n            const todoLength = tmp_add_toDoList.length\r\n            tmp_add_toDoList.push({id:todoLength,toDoList:action.payload.addEvent,isDone: false})\r\n            return {...state,input:{text:''},todos:tmp_add_toDoList}\r\n        case DONE_TODOLIST:\r\n            const tmp_done_toDoList = state.todos.map(item=>item)\r\n            tmp_done_toDoList[action.payload.finishEvent].isDone = !tmp_done_toDoList[action.payload.finishEvent].isDone\r\n            return {...state,todos:tmp_done_toDoList}\r\n        case REMOVE_TODOLIST:\r\n            const remove_Finish_Todo = state.todos.map(item=>item)\r\n            const index = state.todos.find((todo) => {\r\n                return todo.id === action.payload.removeId\r\n            });\r\n            if (index)\r\n            remove_Finish_Todo.splice(index.id, 1);\r\n            for (let i = 0; i < remove_Finish_Todo.length; i++) {\r\n                remove_Finish_Todo[i].id = i;\r\n            }\r\n            return {...state, todos:remove_Finish_Todo}\r\n        case SELECT_RADIO_VALUE:\r\n            return {...state,value:action.payload.radioValue}\r\n        case HAS_DONE_ITEM:\r\n            const tmp_add_doneItem = state.hasDoneItem.map(item=>item)\r\n            tmp_add_doneItem.push(action.payload.addItem)\r\n            return {...state,hasDoneItem:tmp_add_doneItem}\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/module';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore} from 'redux'\r\nimport {initState, reducer} from './reducers/index'\r\n\r\nconst store = createStore(reducer,initState)\r\n\r\nexport const APP= ()=><Provider store={store}><App /></Provider>\r\n\r\nReactDOM.render(<APP/>,  document.getElementById('root'));\r\n\r\n// Functional map\r\n\r\n// 待辦事項\r\n  // 設定待辦事項名稱或內容\r\n  // 設定待辦事項成已完成狀態\r\n  // 調整排列順序\r\n\r\n// 蕃茄鐘\r\n  // 固定時間區間\r\n    // 主工作時間：25 分鐘\r\n    // 短休息時間：5 分鐘\r\n  // 時間倒數介面\r\n    // 顯示進行中待辦事項\r\n    // 有開始鍵能啟動倒數\r\n    // 能暫停倒數\r\n    // 能略過倒數（作廢）\r\n    // 顯示倒數時間\r\n    // 提示鈴聲選項\r\n\r\n// 狀態報表\r\n  // 當天使用蕃茄鐘的記錄與成效\r\n  // 當週使用蕃茄鐘的記錄與成效 　","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timerWrap\":\"css_timerWrap__1EPEV\",\"timer\":\"css_timer__3mt2L\",\"svg\":\"css_svg__1IdSI\",\"timerContainer\":\"css_timerContainer__3FTwo\",\"timeInfo\":\"css_timeInfo__3tGej\",\"iconWrap\":\"css_iconWrap__36zPe\",\"module_wrap\":\"css_module_wrap__pDoE5\",\"todo\":\"css_todo__2cKaR\",\"todo_list\":\"css_todo_list__1dd2U\",\"todo_list_check\":\"css_todo_list_check__1owk3\",\"todo_list_check-active\":\"css_todo_list_check-active__3kzNt\",\"todo_list_title\":\"css_todo_list_title__amMCI\",\"todo_list_count\":\"css_todo_list_count__1h9yu\",\"todo_list_cancel\":\"css_todo_list_cancel__2aVL5\",\"finish\":\"css_finish__2VfWm\",\"finish_list\":\"css_finish_list__2VZ4N\",\"finish_list_check\":\"css_finish_list_check__3r3lF\",\"finish_list_check-active\":\"css_finish_list_check-active__3fhn7\",\"finish_list_title\":\"css_finish_list_title__1wZbx\",\"finish_list_count\":\"css_finish_list_count__28X2a\",\"finish_list_cancel\":\"css_finish_list_cancel__12S-b\"};"],"sourceRoot":""}